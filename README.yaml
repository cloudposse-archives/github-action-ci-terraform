---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: GitHub Action CI Terraform

# License of this project
license: "APACHE2"

# Copyrights
copyrights:
  - name: "Cloud Posse, LLC"
    url: "https://cloudposse.com"
    year: "2022"

# Canonical GitHub repo
github_repo: cloudposse/github-action-ci-terraform

# Badges to display
badges:
  - name: "Build Status"
    image: "https://github.com/cloudposse/build-harness/workflows/docker/badge.svg?branch=master"
    url: "https://github.com/cloudposse/build-harness/actions?query=workflow%3Adocker"
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/cloudposse/build-harness.svg"
    url: "https://github.com/cloudposse/build-harness/releases/latest"
  - name: "Slack Community"
    image: "https://slack.cloudposse.com/badge.svg"
    url: "https://slack.cloudposse.com"

related:
  - name: "GitHub Action Auto-format"
    description: "Add standard files to a repo and keep its README up to date"
    url: "https://github.com/cloudposse/github-action-auto-format"
  - name: "GitHub Action Auto-release"
    description: "Automatically draft release notes for a new release when merges are made into the default branch"
    url: "https://github.com/cloudposse/github-action-auto-release"
  - name: "GitHub Action Terraform Auto-context"
    description: "Automatically update `context.tf` whenever a new version becomes available"
    url: "https://github.com/cloudposse/github-action-terraform-auto-context"
  - name: "GitHub Action Validate CODEOWNERS"
    description: "Validate and lint contents of CODEOWNERS file"
    url: "https://github.com/cloudposse/github-action-validate-codeowners"

# References
references:
  - name: "GitHub Action - github-script"
    description: 'This is a GitHub Action that allows the running of Typescript code with access to built-in GitHub variables'
    url: "https://github.com/actions/github-script"
  - name: "GitHub Status Action"
    description: 'Adds a status update to a commit'
    url: "https://github.com/sibz/github-status-action"
  - name: "GitHub Action - Checkout"
    description: 'Checks out a repository under $GITHUB_WORKSPACE, so a workflow can access it'
    url: "https://github.com/actions/checkout"

# Short description of this project
description: |-
  GitHub Action CI Terraform is a collection of GitHub Actions which are meant to cover all CI functionality necessary for
  Terraform projects. It also includes a chatops comment handler to allow for on-demand execution of these various tests and commands.

# How to use this project
usage: |-
  Copy the `.github/workflows/ci-terraform.yml` file from this repository into the `.github/workflows` folder of the repository to which you'd like to add CI functionality.
  This will cause CI functionality to execute on pull requests and whenever requested via chatops.
  ### Chatops
  To request functionality via chatops, type `/run [command_name]` or `/test [test_name]` in a comment for any open pull request.
  It is possible to request multiple commands or tests in one chatops comment, e.g., `/run command_1 command_2 command_3`.
  #### COMMANDS
  Some of Cloud Posse's CI functionality will modify repo files and push a commit with the modified files to the current branch. These commands can be invoked by commenting on a pull request with `/run [command_name]`.

  The following is a complete list of all valid run commands:
    * **rebuild-readme**
    * **terraform-fmt**
    * **all** (runs all of the above)
  #### TESTS
  Some of Cloud Posse's CI functionality will test the current state of files in the repo, but will not modify them. The results of tests will be listed along with the other status checks at the bottom of a pull request. These tests can be invoked by commenting on a pull request with `/test [test_name]`.

  The following is a complete list of all valid tests:
    * **ping**
    * **bats**
    * **readme**
    * **terratest**
    * **all** (runs all of the above)

# Example usage
examples: |-
  Here's a real world example:
  - [`github-action-ci-terraform`](https://github.com/cloudposse/github-action-ci-terraform/.github/workflows/ci-terraform.yml) - Cloud Posse's self-testing CI Terraform GitHub Action repo

include:
  - "actions/bulk-status-update/README.md"
  - "actions/commands/rebuild-readme/README.md"
  - "actions/commands/terraform-fmt/README.md"
  - "actions/comment-response/README.md"
  - "actions/handle-commands/README.md"
  - "actions/handle-tests/README.md"
  - "actions/metadata/README.md"
  - "actions/status/README.md"
  - "actions/tests/bats/README.md"
  - "actions/tests/ping/README.md"
  - "actions/tests/readme/README.md"
  - "actions/tests/terratest/README.md"
  - "actions/utilities/determine-terraform-version/README.md"
  - "actions/utilities/execute-terratest/README.md"

# How to get started quickly
quickstart: |-
  Here's how to get started...
  1. Copy the `.github/workflows/ci-terraform.yml` file from this repository into the `.github/workflows` folder of the target repo
  2. Open a pull request inthe target repo
  3. Optional - use chatops commands in comments on the pull request (e.g., `/test all`) as detailed in the [usage section](#usage)

# Contributors to this project
contributors:
  - name: "Dylan Bannon"
    github: "dylanbannon"
