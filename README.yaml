---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: GitHub Action Terraform CI

# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"

# Copyrights
copyrights:
  - name: "Cloud Posse, LLC"
    url: "https://cloudposse.com"
    year: "2022"

# Canonical GitHub repo
github_repo: cloudposse/github-action-terraform-ci

# Badges to display
#badges:
#  - name: "Build Status"
#    image: "https://github.com/cloudposse/build-harness/workflows/docker/badge.svg?branch=master"
#    url: "https://github.com/cloudposse/build-harness/actions?query=workflow%3Adocker"
#  - name: "Latest Release"
#    image: "https://img.shields.io/github/release/cloudposse/build-harness.svg"
#    url: "https://github.com/cloudposse/build-harness/releases/latest"
#  - name: "Slack Community"
#    image: "https://slack.cloudposse.com/badge.svg"
#    url: "https://slack.cloudposse.com"
#  - name: "Discourse Forum"
#    image: "https://img.shields.io/discourse/https/ask.sweetops.com/posts.svg"
#    url: "https://ask.sweetops.com/"

related:
  - name: "GitHub Action Auto-format"
    description: "Add standard files to a repo and keep its README up to date"
    url: "https://github.com/cloudposse/github-action-auto-format"
  - name: "GitHub Action Auto-release"
    description: "Automatically draft release notes for a new release when merges are made into the default branch"
    url: "https://github.com/cloudposse/github-action-auto-release"
  - name: "GitHub Action Terraform Auto-context"
    description: "Automatically update `context.tf` whenever a new version becomes available"
    url: "https://github.com/cloudposse/github-action-terraform-auto-context"
  - name: "GitHub Action Validate CODEOWNERS"
    description: "Validate and lint contents of CODEOWNERS file"
    url: "https://github.com/cloudposse/github-action-validate-codeowners"

# References
#references:
#  - name: "Wikipedia - Test Harness"
#    description: 'The `build-harness` is similar in concept to a "Test Harness"'
#    url: "https://en.wikipedia.org/wiki/Test_harness"

# Screenshots
#screenshots:
#  - name: "demo"
#    description: "Example of using the `build-harness` to build a docker image"
#    url: "https://cdn.rawgit.com/cloudposse/build-harness/master/docs/demo.svg"

# Short description of this project
description: |-
  GitHub Action Terraform CI is a collection of GitHub Actions which are meant to cover all CI functionality necessary for
  Terraform projects. It also includes a chatops comment handler to allow for on-demand execution of these various tests and commands.
# Introduction to the project
#introduction: |-
#  This is an introduction.

# How to use this project
usage: |-
  Copy the `sample_workflow_file.yaml` file from this repository into the `.github/workflows` folder of the repository to which you'd like to add Terraform CI functionality.
  This will cause CI functionality to execute on pull requests and whenever requested via chatops.
  ### Chatops
  To request functionality via chatops, type `/run [command_name]` or `/test [test_name]` in a comment for any open pull request.
  It is possible to request multiple commands or tests in one chatops comment, e.g., `/run command_1 command_2 command_3`.
  #### COMMANDS
  Some of Cloud Posse's Terraform CI functionality will modify repo files and push a commit with the modified files to the current branch. These commands can be invoked by commenting on a pull request with `/run [command_name]`.

  The following is a complete list of all valid run commands:
    * **rebuild-readme**
    * **terraform-fmt**
    * **all** (runs all of the above)
  #### TESTS
  Some of Cloud Posse's Terraform CI functionality will test the current state of files in the repo, but will not modify them. The results of tests will be listed along with the other status checks at the bottom of a pull request. These tests can be invoked by commenting on a pull request with `/test [test_name]`.

  The following is a complete list of all valid tests:
    * **ping**
    * **bats**
    * **readme**
    * **terratest**
    * **all** (runs all of the above)

# Example usage
#examples: |-
#  Here are some real world examples:
#  - [`github-authorized-keys`](https://github.com/cloudposse/github-authorized-keys/) - A Golang project that leverages `docker/%`, `go/%`, `travis/%` targets
#  - [`charts`](https://github.com/cloudposse/charts/) - A collection of Helm Charts that leverages `docker/%` and `helm/%` targets
#  - [`bastion`](https://github.com/cloudposse/bastion/) - A docker image that leverages `docker/%` and `bash/lint` targets
#  - [`terraform-null-label`](https://github.com/cloudposse/terraform-null-label/) - A terraform module that leverages `terraform/%` targets

# How to get started quickly
#quickstart: |-
#  Here's how to get started...
#  1. `git clone https://github.com/cloudposse/build-harness.git` to pull down the repository
#  2. `make init` to initialize the [`build-harness`](https://github.com/cloudposse/build-harness/)

# Other files to include in this README from the project folder
#include:
#  - "docs/targets.md"
#  - "docs/extensions.md"
#  - "docs/auto-init.md"

# Contributors to this project
contributors:
  - name: "Dylan Bannon"
    github: "dylanbannon"
