name: 'terraform-ci'
description: 'Run chatops github actions'
inputs:
  token:
    description: "github token"
    required: true
runs:
  using: "composite"
  steps:
    - name: "Checkout commit"
      uses: actions/checkout@v2

    - name: "Get metadata"
      id: metadata
      uses: actions/github-script@v4
      with:
        script: |
          // extract the SHA of the commit at the head of the PR
          const prUrl = context.payload.issue.pull_request.url;
          const prDetails = await github.request(`GET ${prUrl}`);
          let headSha = prDetails.data.head.sha;
          core.setOutput("pr-sha", headSha);

          // extract the base branch name that's being merged into
          let prBaseRef = prDetails.data.base.ref;
          core.setOutput("pr-base-ref", prBaseRef);

          // extract the labels attached to this PR
          let prLabels = prDetails.data.labels;
          core.setOutput("pr-labels", prLabels);

          // extract the name(s) of the test suite(s) to be run
          const validTests = ['all', 'ping', 'bats', 'terratest', 'readme']
          const commentBody = context.payload.comment.body;
          console.log(commentBody)
          const testRegex = /^\/test (.+)\s*$/;
          testMatches = commentBody.match(testRegex);
          console.log(testMatches)
          if (testMatches == null) { // this indicates no /test command was found
            core.setOutput("tests-names", "none")
          } else if (testMatches[1]) { // this should be the first capture group in a successful match
            if ( validTests.some( test => testMatches[1].includes(test) ) ) {
              // at least one valid test specified
              core.setOutput("tests-names", testMatches[1])
            } else {
              // no valid tests specified
              core.setOutput("tests-names", "unrecognized")
            }
          }

    - name: "Respond to chatops comments requesting recognized '/test's"
      if: "!contains(steps.metadata.outputs.tests-names, 'unrecognized')" && "!contains(steps.metadata.outputs.tests-names, 'none')"
      uses: cloudposse/github-action-terraform-ci/actions/comment-response@main
      with:
        comment_id: ${{ github.event.comment.id }}
        comment_response: "+1"

    - name: "Respond to chatops comments requesting unrecognized '/test's"
      if: contains(steps.metadata.outputs.tests-names, 'unrecognized')
      uses: cloudposse/github-action-terraform-ci/actions/comment-response@main
      with:
        comment_id: ${{ github.event.comment.id }}
        comment_response: "-1"

    - name: "Record pending status for all forthcoming checks"
      uses: cloudposse/github-action-terraform-ci/actions/status-pending@main
      with:
        token: ${{ inputs.token }}
        test-names: ${{ steps.metadata.outputs.tests-names }}
        sha: ${{ steps.metadata.outputs.pr-sha }}

#    - name: "Handle all test commands"
#      if: contains(steps.metadata.outputs.tests-names, 'all')
#      uses: cloudposse/github-action-terraform-ci/actions/runs@main
#      with:
#        tests: "ping,bats,readme"
#        pr-sha: ${{ steps.metadata.outputs.pr-sha }}
#      #secrets:
#      #  token: ${{ inputs.token }}

    - name: "Handle bats command"
      if: contains(steps.metadata.outputs.tests-names, 'bats') || contains(steps.metadata.outputs.tests-names, 'all')
      uses: cloudposse/github-action-terraform-ci/actions/bats@main
      with:
        token: ${{ inputs.token }}
        test-name: "tests-bats"
        sha: ${{ steps.metadata.outputs.pr-sha }}

    - name: "Handle ping command"
      if: contains(steps.metadata.outputs.tests-names, 'ping') || contains(steps.metadata.outputs.tests-names, 'all')
      uses: cloudposse/github-action-terraform-ci/actions/ping@main
      with:
        token: ${{ inputs.token }}
        test-name: "tests-ping"
        sha: ${{ steps.metadata.outputs.pr-sha }}

    - name: "Handle readme command"
      if: contains(steps.metadata.outputs.tests-names, 'readme') || contains(steps.metadata.outputs.tests-names, 'all')
      uses: cloudposse/github-action-terraform-ci/actions/readme@main
      with:
        token: ${{ inputs.token }}
        test-name: "tests-readme"
        sha: ${{ steps.metadata.outputs.pr-sha }}

    - name: "Handle terratest command"
      if: contains(steps.metadata.outputs.tests-names, 'terratest') || contains(steps.metadata.outputs.tests-names, 'all')
      uses: cloudposse/github-action-terraform-ci/actions/terratest@main
      with:
        token: ${{ inputs.token }}
        test-name: "tests-terratest"
        sha: ${{ steps.metadata.outputs.pr-sha }}
        base-ref: ${{ steps.metadata.outputs.pr-base-ref }}
        labels: ${{ inputs.pr-labels }}

#    - name: "Handle common commands"
#      uses: peter-evans/slash-command-dispatch@v2.3.0
#      #uses: cloudposse/actions/github/slash-command-dispatch@0.22.0
#      with:
#        token: ${{ inputs.token }}
#        reaction-token: ${{ inputs.reaction-token }}
#        repository: cloudposse/actions
#        commands: rebuild-readme, terraform-fmt
#        permission: triage
#        issue-type: pull-request
#    - name: "Run tests"
#      uses: peter-evans/slash-command-dispatch@v2.3.0
#      #uses: cloudposse/actions/github/slash-command-dispatch@0.22.0
#      with:
#        token: ${{ inputs.token }}
#        reaction-token: ${{ inputs.reaction-token }}
#        repository: cloudposse/actions
#        commands: test
#        permission: triage
#        issue-type: pull-request
#        reactions: false
