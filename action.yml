name: 'terraform-ci'
description: 'Run chatops github actions'
inputs:
  token:
    description: "public repo access token"
    required: true
  reaction-token:
    description: "github token"
    required: true
  test-name:
    description: "name of the github action that will be calling this action as a step"
    required: true
  sha:
    description: "SHA hash of the commit whose status will be modified"
    required: true
runs:
  using: "composite"
  steps:
    - name: "Checkout commit"
      uses: actions/checkout@v2
    - name: "Get SHA of pull request branch"
      id: pr-sha
      uses: actions/github-script@v4
      with:
        script: |
          const prUrl = context.payload.issue.pull_request.url;
          const prDetails = await github.request(`GET ${prUrl}`);
          let headSha = prDetails.data.head.sha;
          core.setOutput("pr-sha", headSha);
    - name: "/test bats"
      if: ${{ github.event.comment.body == '/test bats' }}
      uses: user/bats@v1
#    - name: "Acknowledge '/test bats'"
#      if: ${{ github.event.comment.body == '/test bats' }}
#      uses: actions/github-script@v4
#      with:
#        script: |
#          const {owner, repo} = context.issue
#          github.reactions.createForIssueComment({
#            owner,
#            repo,
#            comment_id: context.payload.comment.id,
#            content: "+1",
#          });
#    - name: "Record pending '/test bats' result"
#      if: ${{ github.event.comment.body == '/test bats' }}
#      uses: Sibz/github-status-action@v1
#      with:
#        authToken: ${{ inputs.reaction-token }}
#        context: ${{ inputs.test-name }}
#        description: 'Computing...'
#        state: 'pending'
#        sha: ${{ steps.pr-sha.outputs.pr-sha }}
#    - name: "Execute /test bats 1"
#      if: ${{ github.event.comment.body == '/test bats'}}
#      uses: docker://cloudposse/test-harness:latest
#      env:
#        MAKE_INCLUDES: Makefile
#        TF_PLUGIN_CACHE_DIR: /tmp
#      with:
#        entrypoint: make
#        args: "-C test/ clean init"
#    - name: "Execute /test bats 2"
#      if: ${{ github.event.comment.body == '/test bats' && success() }}
#      uses: docker://cloudposse/test-harness:latest
#      env:
#        MAKE_INCLUDES: Makefile
#        TF_PLUGIN_CACHE_DIR: /tmp
#      with:
#        entrypoint: make
#        args: "-C test/ module"
#    - name: "Execute /test bats 3"
#      if: ${{ github.event.comment.body == '/test bats' && success() }}
#      uses: docker://cloudposse/test-harness:latest
#      env:
#        MAKE_INCLUDES: Makefile
#        TF_PLUGIN_CACHE_DIR: /tmp
#      with:
#        entrypoint: make
#        args: "-C test/ examples/complete"
#    - name: "Record successful '/test bats' result"
#      if: ${{ github.event.comment.body == '/test bats' && success() }}
#      uses: Sibz/github-status-action@v1
#      with:
#        authToken: ${{ inputs.reaction-token }}
#        context: ${{ inputs.test-name }}
#        description: 'Passed'
#        state: 'success'
#        sha: ${{ steps.pr-sha.outputs.pr-sha }}
#    - name: "Record unsuccessful '/test bats' result"
#      if: ${{ github.event.comment.body == '/test bats' && failure() }}
#      uses: Sibz/github-status-action@v1
#      with:
#        authToken: ${{ inputs.reaction-token }}
#        context: ${{ inputs.test-name }}
#        description: 'Failed'
#        state: 'failure'
#        sha: ${{ steps.pr-sha.outputs.pr-sha }}

#    - name: "Handle common commands"
#      uses: peter-evans/slash-command-dispatch@v2.3.0
#      #uses: cloudposse/actions/github/slash-command-dispatch@0.22.0
#      with:
#        token: ${{ inputs.token }}
#        reaction-token: ${{ inputs.reaction-token }}
#        repository: cloudposse/actions
#        commands: rebuild-readme, terraform-fmt
#        permission: triage
#        issue-type: pull-request
#    - name: "Run tests"
#      uses: peter-evans/slash-command-dispatch@v2.3.0
#      #uses: cloudposse/actions/github/slash-command-dispatch@0.22.0
#      with:
#        token: ${{ inputs.token }}
#        reaction-token: ${{ inputs.reaction-token }}
#        repository: cloudposse/actions
#        commands: test
#        permission: triage
#        issue-type: pull-request
#        reactions: false
