name: 'terraform-ci'
description: 'Run chatops github actions'
inputs:
  token:
    description: "public repo access token"
    required: true
  reaction-token:
    description: "github token"
    required: true
runs:
  using: "composite"
#  using: 'docker'
#  image: 'cloudposse/test-harness:latest'
  steps:
    - name: "Checkout commit"
      uses: actions/checkout@v2
    - name: "Acknowledge '/test bats'"
      if: ${{ github.event.comment.body == '/test bats' }}
      uses: actions/github-script@v4
      with:
        script: |
          const {owner, repo} = context.issue
          github.reactions.createForIssueComment({
            owner,
            repo,
            comment_id: context.payload.comment.id,
            content: "+1",
          });
    - name: "Record pending '/test bats' result"
      if: ${{ github.event.comment.body == '/test bats' }}
      uses: Sibz/github-status-action@v1
      with:
        authToken: ${{secrets.GITHUB_TOKEN}}
        context: 'tests-bats'
        description: 'Computing...'
        state: 'pending'
        sha: ${{github.event.pull_request.head.sha || github.sha}}
    - name: "Execute /test bats 1"
      if: ${{ github.event.comment.body == '/test bats'}}
      uses: docker://cloudposse/test-harness:latest
      env:
        MAKE_INCLUDES: Makefile
        TF_PLUGIN_CACHE_DIR: /tmp
      with:
        entrypoint: make
        args: "-C test/ clean init"
    - name: "Execute /test bats 2"
      if: ${{ github.event.comment.body == '/test bats' && success() }}
      uses: docker://cloudposse/test-harness:latest
      env:
        MAKE_INCLUDES: Makefile
        TF_PLUGIN_CACHE_DIR: /tmp
      with:
        entrypoint: make
        args: "-C test/ module"
    - name: "Execute /test bats 3"
      if: ${{ github.event.comment.body == '/test bats' && success() }}
      uses: docker://cloudposse/test-harness:latest
      env:
        MAKE_INCLUDES: Makefile
        TF_PLUGIN_CACHE_DIR: /tmp
      with:
        entrypoint: make
        args: "-C test/ examples/complete"
    - name: "Record successful '/test bats' result"
      if: ${{ github.event.comment.body == '/test bats' && success() }}
      uses: Sibz/github-status-action@v1
      with:
        authToken: ${{secrets.GITHUB_TOKEN}}
        context: 'tests-bats'
        description: 'Passed'
        state: 'success'
        sha: ${{github.event.pull_request.head.sha || github.sha}}
    - name: "Record unsuccessful '/test bats' result"
      if: ${{ github.event.comment.body == '/test bats' && failure() }}
      uses: Sibz/github-status-action@v1
      with:
        authToken: ${{secrets.GITHUB_TOKEN}}
        context: 'tests-bats'
        description: 'Failed'
        state: 'failure'
        sha: ${{github.event.pull_request.head.sha || github.sha}}

#    - name: "Record successful '/test bats' result"
#      if: ${{ github.event.comment.body == '/test bats' && success() }}
#      uses: actions/github-script@v4
#      with:
#        script: |
#          const {owner, repo} = context.issue
#          github.checks.update({
#            owner,
#            repo,
#            ${{ inputs.check_run_id }},
#            status: "in_progress"
#          });
#    - name: "Record unsuccessful '/test bats' result"
#      if: ${{ github.event.comment.body == '/test bats' && failure() }}
#      uses: actions/github-script@v4
#      with:
#        script: |
#          const {owner, repo} = context.issue
#          github.reactions.createForIssueComment({
#            owner,
#            repo,
#            comment_id: context.payload.comment.id,
#            content: "-1",
#          });

#    - name: "Handle common commands"
#      uses: peter-evans/slash-command-dispatch@v2.3.0
#      #uses: cloudposse/actions/github/slash-command-dispatch@0.22.0
#      with:
#        token: ${{ inputs.token }}
#        reaction-token: ${{ inputs.reaction-token }}
#        repository: cloudposse/actions
#        commands: rebuild-readme, terraform-fmt
#        permission: triage
#        issue-type: pull-request
#    - name: "Run tests"
#      uses: peter-evans/slash-command-dispatch@v2.3.0
#      #uses: cloudposse/actions/github/slash-command-dispatch@0.22.0
#      with:
#        token: ${{ inputs.token }}
#        reaction-token: ${{ inputs.reaction-token }}
#        repository: cloudposse/actions
#        commands: test
#        permission: triage
#        issue-type: pull-request
#        reactions: false
