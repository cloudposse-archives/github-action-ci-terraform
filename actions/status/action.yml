name: 'terraform-ci-status'
description: 'Update the status for a given commit and respond to chatops comments with a thumb up or down'
inputs:
  token:
    description: "github token"
    required: true
  sha:
    description: "SHA hash of the commit whose status will be modified"
    required: true
  test-name:
    description: "name of the github action status check that will be calling this action as a step"
    required: false
  status:
    description: "Result of status check"
    required: false
  comment_id:
    description: "ID of comment which triggered this action"
    required: false
  request_understood:
    description: "Whether the chatops request was understood"
    required: false
runs:
  using: "composite"
  steps:
    - name: "Acknowledge unintelligible chatops request"
      if: inputs.comment_id && inputs.request_understood == 'false'
      uses: actions/github-script@v4
      with:
        script: |
          const {owner, repo} = context.issue
          github.reactions.createForIssueComment({
            owner,
            repo,
            comment_id: "${{ inputs.comment_id }}",
            content: "-1",
          });

    - name: "Acknowledge understood chatops request"
      if: inputs.comment_id && inputs.request_understood == 'true'
      uses: actions/github-script@v4
      with:
        script: |
          const {owner, repo} = context.issue
          github.reactions.createForIssueComment({
            owner,
            repo,
            comment_id: "${{ inputs.comment_id }}",
            content: "+1",
          });

    - name: "Record pending result"
      if: inputs.comment_id && inputs.request_understood == 'true'
      uses: Sibz/github-status-action@v1
      with:
        authToken: ${{ inputs.token }}
        context: ${{ inputs.test-name }}
        description: 'Tests are currently running'
        state: 'pending'
        sha: ${{ inputs.sha }}
        target_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

    - name: "Acknowledge ping test"
      if: ${{ inputs.status == 'ping' }}
      uses: Sibz/github-status-action@v1
      with:
        authToken: ${{ inputs.token }}
        context: ${{ inputs.test-name }}
        description: 'PONG'
        state: 'success'
        sha: ${{ inputs.sha }}
        target_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

    - name: "Record successful result"
      if: ${{ inputs.status == 'Success' }}
      uses: Sibz/github-status-action@v1
      with:
        authToken: ${{ inputs.token }}
        context: ${{ inputs.test-name }}
        description: 'All tests passed'
        state: 'success'
        sha: ${{ inputs.sha }}
        target_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

    - name: "Record canceled result"
      if: ${{ inputs.status == 'Canceled' }}
      uses: Sibz/github-status-action@v1
      with:
        authToken: ${{ inputs.token }}
        context: ${{ inputs.test-name }}
        description: 'Tests were cancelled by user'
        state: 'canceled'
        sha: ${{ inputs.sha }}
        target_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

    - name: "Record unsuccessful result"
      if: ${{ inputs.status == 'Failure' }}
      uses: Sibz/github-status-action@v1
      with:
        authToken: ${{ inputs.token }}
        context: ${{ inputs.test-name }}
        description: 'One or more tests failed'
        state: 'failure'
        sha: ${{ inputs.sha }}
        target_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
